parameters:
- name: stageId
  type: string
- name: dependson
  type: object
  default: []
- name: env
  type: string
- name: environmentName
  type: string
- name: resourceGroupName
  type: string
- name: serviceConnection
  type: string
- name: notebooksPath
  type: string

jobs:
  deploy:
    runs-on: ubuntu-latest
    needs: ${{ parameters.dependson }}
    environment: ${{ parameters.environmentName }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Azure CLI
      uses: azure/cli@v1

    - name: Deploy Databricks Notebooks
      run: |
        # Set Azure CLI to use dynamic installs
        az config set extension.use_dynamic_install=yes_without_prompt
        az config set extension.dynamic_install_allow_preview=true

        # Get Databricks workspace ID
        databricksWorkspace=$(az resource list --resource-group ${{ parameters.resourceGroupName }} --query "[?type=='Microsoft.Databricks/workspaces'].id" --output tsv)

        # Get Databricks workspace details
        databricksWorkspaceInfo=$(az databricks workspace show --ids $databricksWorkspace --output json)

        # Get Databricks access token (replace with your logic)
        bearerToken=$(pwsh ./scripts/DatabricksToken.ps1 -databricksworkspaceResourceId $(echo $databricksWorkspaceInfo | jq -r '.id') -databricksWorkspaceUrl $(echo $databricksWorkspaceInfo | jq -r '.workspaceUrl'))

        # Install azure.databricks.cicd.tools module
        pwsh -Command "Install-Module -Name azure.databricks.cicd.tools -Force -Scope CurrentUser"

        # Import modules and deploy notebooks
        pwsh -Command "Import-Module -Name azure.databricks.cicd.tools; Import-DatabricksFolder -BearerToken $bearerToken -Region $(echo $databricksWorkspaceInfo | jq -r '.location') -LocalPath ${{ github.workspace }}/${{ parameters.notebooksPath }} -DatabricksPath '/live' -Clean"

trigger:
    - main
    - addbasicdbxws
    - cgpersonal

variables:
  - template: .\env-variables.yml
  - name: notebooksPath
    value: "dbx-using-cicdtools-azdevops/notebooks"

# pool:
#   vmImage:  windows-latest" (this is if you are using a azurehosted agent)


pool:
  vmImage: 'ubuntu-latest'

# pool:
#   name: 'fiftysix-agents-devops' # Specify the agent pool name
#   demands:
#     - Agent.Name -equals vm-fiftysix0=-agent1 # Target the specific agent

stages:
 - stage: DoingDev
   variables:
      - group: Dev-vars
   jobs:
      # Debug Token Retrieval
     - job: DebugToken
       displayName: "Debug Token Retrieval"
       steps:
         - script: |
             echo "Debugging token retrieval..."
             echo "Databricks Token from variable group: ${{ variables['databrickstoken-appreg-srvcondevops-dev'] }}"
             if [ -z "$(databrickstoken-appreg-srvcondevops-dev)" ]; then
               echo "ERROR: Token from variable group is empty or not set!"
               echo "Checking Key Vault access..."
               az keyvault secret show --name databrickstoken-appreg-srvcondevops-dev --vault-name <YourKeyVaultName>
               if [ $? -ne 0 ]; then
                 echo "ERROR: Unable to access Key Vault or retrieve the secret!"
                 exit 1
               fi
             fi
           displayName: 'Debug Token Retrieval'

      # Deploy Notebooks
     - template: templates/dbrickscli.yml
       parameters:
         stageId: "Deploy_to_Dev_Environment"
         env: "dev"
         environmentName: ${{ variables['dev-environment-name'] }}
         resourceGroupName: ${{ variables['dev-resource-group-name'] }}
         serviceConnection: ${{ variables['dev-service-connection-name'] }}
         notebooksPath: $(notebooksPath)
         databricksHost: ${{ variables['dev-databricks-host'] }}
         databricksToken: $(databrickstoken-appreg-srvcondevops-dev)

#  - stage: DoingProd
#    dependsOn: DoingDev  # Ensures PROD runs only after DEV succeeds
#    variables:
#      - group: Prod-vars
#    jobs:
#     - template: templates/dbrickscli.yml
#       parameters:
#         stageId: "Deploy_to_PROD_Environment"
#         env: "prod"
#         environmentName: ${{ variables['prod-environment-name'] }}
#         resourceGroupName: ${{ variables['prod-resource-group-name'] }}
#         serviceConnection: ${{ variables['prod-service-connection-name'] }}
#         notebooksPath: $(notebooksPath)
#         databricksHost: ${{ variables['prod-databricks-host'] }}
#         databricksToken: ${{ variables['databrickstoken-appreg-srvcondevops-dev'] }}

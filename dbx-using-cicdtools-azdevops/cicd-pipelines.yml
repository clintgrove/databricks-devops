trigger:
    - main
    - addbasicdbxws

variables:
  - template: .\env-variables.yml
    
  - name: vmImageName
    value: "windows-latest"
  - name: notebooksPath
    value: "dbx-using-cicdtools-azdevops/notebooks"

pool:
  vmImage:  $(vmImageName) (this is if you are using a azurehosted agent)

# pool:
#   name: 'fiftysix-agents-devops' # Specify the agent pool name
#   demands:
#     - Agent.Name -equals vm-fiftysix0=-agent1 # Target the specific agent

stages:
 - stage: DoingDev
   jobs:
       # Deploy Notebooks
    - template: templates/deploy-notebooks.yml
      parameters:
        stageId: "Deploy_to_Dev_Environment"
        env: "dev"
        environmentName: ${{ variables['dev-environment-name'] }}
        resourceGroupName: ${{ variables['dev-resource-group-name'] }}
        serviceConnection: ${{ variables['dev-service-connection-name'] }}
        notebooksPath: $(notebooksPath)

 - stage: DoingProd
   dependsOn: DoingDev  # Ensures PROD runs only after DEV succeeds
   jobs:
    - template: templates/deploy-notebooks.yml
      parameters:
        stageId: "Deploy_to_PROD_Environment"
        env: "prod"
        environmentName: ${{ variables['prod-environment-name'] }}
        resourceGroupName: ${{ variables['prod-resource-group-name'] }}
        serviceConnection: ${{ variables['prod-service-connection-name'] }}
        notebooksPath: $(notebooksPath)

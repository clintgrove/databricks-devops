parameters:
- name: stageId
  type: string
- name: dependson
  type: object
  default: []
- name: env
  type: string
- name: environmentName
  type: string
- name: resourceGroupName
  type: string
- name: serviceConnection
  type: string
- name: notebooksPath
  type: string
- name: databricksHost
  type: string
- name: databricksToken
  type: string  

jobs:
- deployment: ${{ parameters.stageId }} # Parameterized job name for uniqueness
  displayName: "Deploy Databricks Notebooks to ${{ parameters.env }}"
  environment: ${{ parameters.environmentName }}
  strategy:
    runOnce:
      deploy:
        steps:
        - task: UsePythonVersion@0
          inputs:
            versionSpec: '3.9' # Explicitly specify Python 3.9
            addToPath: true
            # token: $(GitHubToken) # Use GitHub token for authenticated downloads
          continueOnError: true # Allow the pipeline to continue if this step fails

        - script: |
            if ! python --version; then
              echo "Python not found. Installing Python manually..."
              curl -sSL https://bootstrap.pypa.io/get-pip.py | python
            fi
          displayName: 'Verify or Install Python'
          condition: failed() # Run only if the previous step fails

        - script: |
            if ! command -v databricks &> /dev/null; then
              echo "databricks-cli not found. Installing..."
              python -m pip install --upgrade pip
              pip install databricks-cli
            else
              echo "databricks-cli is already installed. Upgrading..."
              # python -m pip install --upgrade pip
              # pip install --upgrade databricks-cli
              
          displayName: 'Check and Install/Upgrade databricks-cli'

        - script: |
            databricks configure --host "${{ parameters.databricksHost }}" --token "${{ parameters.databricksToken }}"
          displayName: 'Configure databricks-cli'

        - script: |
            databricks workspace mkdirs /notebooks
            databricks workspace import_dir ../notebooks /notebooks --overwrite
          displayName: 'Upload notebooks to Databricks workspace'
          workingDirectory: $(System.DefaultWorkingDirectory)/templates
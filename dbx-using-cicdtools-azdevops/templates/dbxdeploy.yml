parameters:
- name: stageId
  type: string
- name: dependson
  type: object
  default: []
- name: env
  type: string
- name: environmentName
  type: string
- name: resourceGroupName
  type: string
- name: serviceConnection
  type: string
- name: notebooksPath
  type: string
- name: databricksHost
  type: string
- name: databricksToken
  type: string  

jobs:
- deployment: ${{ parameters.stageId }}
  displayName: "Deploy Databricks Notebooks to ${{ parameters.env }}"
  environment: ${{ parameters.environmentName }}
  strategy:
    runOnce:
      deploy:
        steps:
        # - task: UsePythonVersion@0
        #   inputs:
        #     versionSpec: '3.9'
        #     addToPath: true

        # - task: AzureCLI@2
        #   inputs:
        #     azureSubscription: ${{ parameters.serviceConnection }}
        #     scriptType: bash
        #     scriptLocation: inlineScript
        #     inlineScript: |
        #       az config set extension.use_dynamic_install=yes_without_prompt
        #       az config set extension.dynamic_install_allow_preview=true
        #   displayName: 'Configure Azure CLI'

        # - script: |
        #     python -m pip install --upgrade pip
        #     pip install databricks-cli
        #   displayName: 'Install Databricks CLI'

        - script: |
            export DATABRICKS_HOST=${{ parameters.databricksHost }}
            export DATABRICKS_TOKEN=${{ parameters.databricksToken }}
            databricks configure --token
          displayName: 'Configure Databricks CLI'

        - script: |
            echo "Deploying notebooks to ${{ parameters.env }} environment"
            echo "Using resource group: ${{ parameters.resourceGroupName }}"
            echo "Notebooks path: ${{ parameters.notebooksPath }}"

            databricks workspace import_dir \
              --overwrite \
              ${{ parameters.notebooksPath }} \
              /live

            echo "Deployment complete."
          displayName: 'Deploy Databricks Notebooks'
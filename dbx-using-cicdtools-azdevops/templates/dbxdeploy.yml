parameters:
- name: stageId
  type: string
- name: dependson
  type: object
  default: []
- name: env
  type: string
- name: environmentName
  type: string
- name: resourceGroupName
  type: string
- name: serviceConnection
  type: string
- name: notebooksPath
  type: string
- name: databricksHost
  type: string
- name: databricksToken
  type: string  

jobs:
- deployment: ${{ parameters.stageId }}
  displayName: "Deploy Databricks Notebooks to ${{ parameters.env }}"
  environment: ${{ parameters.environmentName }}
  strategy:
    runOnce:
      deploy:
        steps:
        # - task: UsePythonVersion@0
        #   inputs:
        #     versionSpec: '3.9'
        #     addToPath: true

        # - task: AzureCLI@2
        #   inputs:
        #     azureSubscription: ${{ parameters.serviceConnection }}
        #     scriptType: bash
        #     scriptLocation: inlineScript
        #     inlineScript: |
        #       az config set extension.use_dynamic_install=yes_without_prompt
        #       az config set extension.dynamic_install_allow_preview=true
        #   displayName: 'Configure Azure CLI'

        - script: |
            python -m pip install --upgrade pip
            pip install --upgrade databricks-cli
          displayName: 'Upgrade Databricks CLI'

        - task: AzureCLI@2
          inputs:
            azureSubscription: ${{ parameters.serviceConnection }}
            scriptType: bash
            scriptLocation: inlineScript
            inlineScript: |
              databricks workspace import-dir ${{ parameters.notebooksPath }} /live
          displayName: 'wspace already'


        # Use Azure CLI to configure Databricks CLI
        - task: AzureCLI@2
          inputs:
            azureSubscription: ${{ parameters.serviceConnection }}
            scriptType: ps
            scriptLocation: inlineScript
            inlineScript: |
              $env:DATABRICKS_HOST = '${{ parameters.databricksHost }}'
              $env:DATABRICKS_TOKEN = '${{ parameters.databricksToken }}'
              Set-Content -Path "$env:USERPROFILE\.databrickscfg" -Value "[DEFAULT]`nhost=$env:DATABRICKS_HOST`ntoken=$env:DATABRICKS_TOKEN"
              databricks configure --token --host $env:DATABRICKS_HOST --token $env:DATABRICKS_TOKEN
              echo "Configured Databricks CLI"
          displayName: 'Configure Databricks CLI'

        # # Deploy the notebooks
        # - script: |
        #     echo "Deploying notebooks to ${{ parameters.env }} environment"
        #     echo "Using resource group: ${{ parameters.resourceGroupName }}"
        #     echo "Notebooks path: ${{ parameters.notebooksPath }}"

        #     databricks workspace import-dir ${{ parameters.notebooksPath }} /live
        #     if ($?) {
        #       echo "Deployment complete."
        #     } else {
        #       echo "Deployment failed."
        #       exit 1
        #     }
        #   displayName: 'Deploy Databricks Notebooks'

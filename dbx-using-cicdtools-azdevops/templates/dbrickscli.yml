parameters:
- name: stageId
  type: string
- name: env
  type: string
- name: environmentName
  type: string
- name: serviceConnection
  type: string
- name: notebooksPath
  type: string
- name: databricksHost
  type: string  
- name: databricksClientId
  type: string
- name: databricksClientSecret
  type: string
- name: databricksAccountID
  type: string  

jobs:
- deployment: ${{ parameters.stageId }}
  displayName: "Deploy Databricks Notebooks to ${{ parameters.env }}"
  environment: ${{ parameters.environmentName }}
  strategy:
    runOnce:
      deploy:
        steps:
        - task: UsePythonVersion@0
          inputs:
            versionSpec: '3.x'
            addToPath: true

        - script: |
            python -m pip install --upgrade pip
            pip install databricks-cli
          displayName: 'Install Databricks CLI'


        - task: AzureCLI@2
          inputs:
            azureSubscription: ${{ parameters.serviceConnection }}
            scriptType: bash
            scriptLocation: inlineScript
            inlineScript: |
              export DATABRICKS_HOST=$DATABRICKS_HOST
              export DATABRICKS_ACCOUNT_ID=$DATABRICKS_ACCOUNT_ID
              export DATABRICKS_CLIENT_ID=$DATABRICKS_CLIENT_ID
              export DATABRICKS_CLIENT_SECRET=$DATABRICKS_CLIENT_SECRET

              response=$(curl --silent --request POST \
              --url https://accounts.azuredatabricks.net/oidc/accounts/$DATABRICKS_ACCOUNT_ID/v1/token \
              --user "$DATABRICKS_CLIENT_ID:$DATABRICKS_CLIENT_SECRET" \
              --data 'grant_type=client_credentials&scope=all-apis')
              DATABRICKS_TOKEN=$(echo $response | jq -r '.access_token')
              DATABRICKS_HOST=$(DATABRICKS_HOST)
              echo -e "[DEFAULT]\nhost = $DATABRICKS_HOST\ntoken = $DATABRICKS_TOKEN" > ~/.databrickscfg
              
          env:
            DATABRICKS_HOST: $ {{ parameters.databricksHost }}
            DATABRICKS_CLIENT_SECRET: ${{ parameters.databricksClientSecret }}
            DATABRICKS_CLIENT_ID: ${{ parameters.databricksClientId }} 
            DATABRICKS_ACCOUNT_ID: ${{ parameters.databricksAccountID }}
          displayName: 'Authenticate with Azure CLI and Configure Databricks CLI'

        - script: |
            databricks workspace ls
            # databricks workspace import_dir $(Build.SourcesDirectory)/${{ parameters.notebooksPath }} /live3 --overwrite
          displayName: 'Write out notebooks to Workspace'
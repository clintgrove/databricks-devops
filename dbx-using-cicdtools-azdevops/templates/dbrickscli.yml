parameters:
- name: stageId
  type: string
- name: env
  type: string
- name: environmentName
  type: string
- name: resourceGroupName
  type: string
- name: serviceConnection
  type: string
- name: notebooksPath
  type: string
- name: databricksHost
  type: string
- name: databricksToken
  type: string  

jobs:
- deployment: ${{ parameters.stageId }}
  displayName: "Deploy Databricks Notebooks to ${{ parameters.env }}"
  environment: ${{ parameters.environmentName }}
  strategy:
    runOnce:
      deploy:
        steps:

        - task: UsePythonVersion@0
          inputs:
            versionSpec: '3.x'
            addToPath: true

        - script: |
            python -m pip install --upgrade pip
            pip install databricks-cli
          displayName: 'Install Databricks CLI'

        - script: |
            echo ${{ parameters.databricksHost }}
          displayName: 'Print Databricks Host'

        - script: |
            mkdir -p ~/.databricks
            touch ~/.databrickscfg
            echo "[DEFAULT]" > ~/.databrickscfg
            echo "host = $DATABRICKS_HOST" >> ~/.databrickscfg
            echo "token = $DATABRICKS_TOKEN" >> ~/.databrickscfg
            echo "Databricks CLI configuration file content:"
            cat ~/.databrickscfg
          displayName: 'Configure Databricks CLI'
          env:
            DATABRICKS_HOST: ${{ parameters.databricksHost }}
            DATABRICKS_TOKEN: ${{ parameters.databricksToken }}

        - script: |
            echo "Testing Databricks CLI authentication..."
            databricks workspace ls
          displayName: 'Testing Databricks CLI module'
          env:
            DATABRICKS_HOST: ${{ parameters.databricksHost }}
            DATABRICKS_TOKEN: ${{ parameters.databricksToken }}

        - script: |
            databricks workspace import_dir $(Build.SourcesDirectory)/${{ parameters.notebooksPath }} /live --overwrite
          displayName: 'Deploy files to Databricks workspace'
          env:
            DATABRICKS_HOST: $(DATABRICKS_HOST)
            DATABRICKS_TOKEN: $(DATABRICKS_TOKEN)
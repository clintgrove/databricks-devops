trigger:
- cgpersonal

variables:
  - name: DATABRICKS_HOST
    value: 'https://adb-1055291633315799.19.azuredatabricks.net' # Replace with your Databricks instance URL
  - group: Dev-vars

parameters:
  - name: notebooksPath
    displayName: 'Path to Notebooks'
    type: string
    default: "dbx-using-cicdtools-azdevops/notebooks"
  - name: serviceConnection
    displayName: 'Azure Service Connection'
    type: string
    default: 'bloom-connect-vse'

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.x'
    addToPath: true

- script: |
    python -m pip install --upgrade pip
    pip install databricks-cli
  displayName: 'Install Databricks CLI'

- task: AzureCLI@2
  inputs:
    azureSubscription: ${{ parameters.serviceConnection }}
    scriptType: bash
    scriptLocation: inlineScript
    inlineScript: |
      # Authenticate with Azure CLI and set Databricks token
      DATABRICKS_TOKEN=$(databrickstoken-appreg-srvcondevops-dev)
      DATABRICKS_HOST=${{ parameters.databricksHost }}
      echo -e "[DEFAULT]\nhost = $DATABRICKS_HOST\ntoken = $DATABRICKS_TOKEN" > ~/.databrickscfg
  env:
    DATABRICKS_HOST: https://adb-1055291633315799.19.azuredatabricks.net
  displayName: 'Authenticate with Azure CLI and Configure Databricks CLI'
#$(az account get-access-token --resource=2ff814a6-3304-4ab8-85cb-cd0e6f879c1d --query accessToken -o tsv)


- script: |
    databricks workspace import_dir $(Build.SourcesDirectory)/${{ parameters.notebooksPath }} /live --overwrite
  displayName: 'Upload Notebooks to Databricks Workspace'
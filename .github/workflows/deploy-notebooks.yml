name: db1      
on:
  workflow_call:
    inputs:
      stageId:
        required: true
        type: string
      dbx-env:
        required: true
        type: string
      resourceGroupName:
        required: true
        type: string
      serviceConnection:
        required: true
        type: string
      notebooksPath:
        required: true
        type: string
    secrets:
      AZURE_CLIENT_ID:
        required: true
      AZURE_TENANT_ID:
        required: true

permissions:
  id-token: write
  contents: read

jobs:
  deploy-notebooks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: "3be2ce56-4a5f-4034-88d7-2953d1819ed3"

      - name: Configure Azure CLI
        run: |
          az config set extension.use_dynamic_install=yes_without_prompt
          az config set extension.dynamic_install_allow_preview=true

      - name: Install Databricks CLI extension
        run: |
          az extension add --name databricks

      - name: Deploy Databricks Notebooks
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        run: |
          echo "Deploying notebooks to ${{ inputs.dbx-env }} environment"
          echo "Using resource group: ${{ inputs.resourceGroupName }}"
          echo "Notebooks path: ${{ inputs.notebooksPath }}"

          # Deploy the notebooks using Databricks CLI
          az databricks workspace import_dir \
            --profile ${{ inputs.dbx-env }} \
            --source ${{ inputs.notebooksPath }} \
            --destination /Workspace/Users/${{ inputs.dbx-env }}

          echo "Deployment complete."

      #     # name: db1

# name: db1      
# on:
#   workflow_call:
#     inputs:
#       stageId:
#         required: true
#         type: string
#       dbx-env:
#         required: true
#         type: string
#       resourceGroupName:
#         required: true
#         type: string
#       serviceConnection:
#         required: true
#         type: string
#       notebooksPath:
#         required: true
#         type: string
#     secrets:
#       AZURE_CLIENT_ID:
#         required: true
#       AZURE_TENANT_ID:
#         required: true

# permissions:
#   id-token: write
#   contents: read
# jobs:
#   deploy-notebooks:
#     runs-on: ubuntu-latest
#     steps:
#     - name: Debug Secrets
#       run: |
#           echo "AZURE_CLIENT_ID is set to: ${{ secrets.AZURE_CLIENT_ID }}"
#           echo "AZURE_TENANT_ID is set to: ${{ secrets.AZURE_TENANT_ID }}"

#     - uses: azure/login@v2
#       with:
#         client-id: ${{ secrets.AZURE_CLIENT_ID }}
#         tenant-id: ${{ secrets.AZURE_TENANT_ID }}   
#         subscription-id: "3be2ce56-4a5f-4034-88d7-2953d1819ed3"

#     - name: Azure CLI script
#       uses: azure/cli@v2
#       with:
#         azcliversion: latest
#         inlineScript: |
#           az account show
